// main43.cc is a part of the PYTHIA event generator.
// Copyright (C) 2019 Torbjorn Sjostrand.
// PYTHIA is licenced under the GNU GPL v2 or later, see COPYING for details.
// Please respect the MCnet Guidelines, see GUIDELINES for details.

// Author: Mikhail Kirsanov, Mikhail.Kirsanov@cern.ch. This program
// illustrates how a file with HepMC events can be generated by
// Pythia8.  It is similar to main42, except that it allows for
// several subruns, e.g. from related LHEF. Input and output files are
// specified on the command line, e.g. like
//     ./main43 main43.cmnd hepmcout43.dat > out
// The main program contains no analysis; this is intended to happen
// later. It therefore "never" has to be recompiled to handle
// different tasks.

// WARNING: typically one needs 25 MB/100 events at the LHC.
// Therefore large event samples may be impractical.

#include "Pythia8/Pythia.h"
#include "Pythia8Plugins/HepMC2.h"

using namespace Pythia8;

template <typename T> string tostr(const T& t) { 
   ostringstream os; 
   os<<t; 
   return os.str(); 
} 

int main(int argc, char* argv[]) {

   // read model parameters from the command line
  if(!(argc==3)){
    std::cout << "I need the following arguments: outputfilename randomseed\n";
    std::cout << "with\n";
    std::cout << "outputfilename: filename where events will be written\n";
    std::cout << "randomseed: an integer, specifying the random seed\n";
    return 0;
  }
     
  // model parameters and settings
  string seed, filename;    
  filename=tostr(argv[1]);
  seed=tostr(argv[2]);    
  
  // number of events    
  int Nevents=10000;    

  // Interface for conversion from Pythia8::Event to HepMC event.
  HepMC::Pythia8ToHepMC ToHepMC;

  // Specify file where HepMC events will be stored.
  HepMC::IO_GenEvent ascii_io(filename, std::ios::out);

  // pythia object
  Pythia pythia;
  
  //Settings for the Pythia object
  pythia.readString("Beams:eCM = 13600.");
  pythia.readString("Tune:pp = 5");
  pythia.readString("HardQCD:all = on");
  pythia.readString("PhaseSpace:pTHatMin = 200");
  pythia.readString("PhaseSpace:pTHatMax = 7000");
  pythia.readString("PhaseSpace:bias2Selection = on");
  pythia.readString("PhaseSpace:bias2SelectionPow = 4.5");
  pythia.readString("PhaseSpace:bias2SelectionRef = 200.");
  pythia.readString("Random:setSeed = on");
  pythia.readString("Random:seed = "+seed); 
  pythia.readString("PartonLevel:ISR = on");
  pythia.readString("Next:numberShowEvent = 0");
    
  pythia.readString("Check:event = off");

  pythia.init();
  pythia.settings.listChanged();
   
  // Shortcuts
  Event& event = pythia.event;
  
  // Begin event loop. Generate event. Skip if error.
  int iEvent=0;
  while (iEvent < Nevents) {
    // Run the event generation

    if (!pythia.next()) {
      cout << " Event generation aborted prematurely, owing to error!\n";
      break;
    }
    
    // Print out a few events
    if (iEvent<1){  
        event.list();
    }
    
    // Construct new empty HepMC event and fill it.
    // Units will be as chosen for HepMC build; but can be changed
    // by arguments, e.g. GenEvt( HepMC::Units::GEV, HepMC::Units::MM)
    HepMC::GenEvent* hepmcevt = new HepMC::GenEvent(HepMC::Units::GEV, HepMC::Units::MM);
    ToHepMC.fill_next_event( pythia, hepmcevt );

    // Write the HepMC event to file. Done with it.
    ascii_io << hepmcevt;
    delete hepmcevt;
    
    iEvent++;

  // End of event loop.
  }
  // print the cross sections etc    
  pythia.stat();

  // Done.
  return 0;

}
